
version: '3'
services:
  rabbitmq:
    container_name: rabbitmq
    build: rabbitmq/.
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:15672']
      interval: 10s
      timeout: 5s
      retries: 5
  client_0:
    container_name: client_0
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    entrypoint: /bin/sh -c 'while sleep 1000; do :; done'
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - FILE_READER_LINES=20
      - THUMBNAIL_PATH=.temp
      - OUTPUT_INSTANCES=2
    volumes:
      - ./data/client0:/workspace/data
      - ./.tmp/client_0:/workspace/.temp
  client_1:
    container_name: client_1
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    entrypoint: /bin/sh -c 'while sleep 1000; do :; done'
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - FILE_READER_LINES=20
      - THUMBNAIL_PATH=.temp
      - OUTPUT_INSTANCES=2
    volumes:
      - ./data/client1:/workspace/data
      - ./.tmp/client_1:/workspace/.temp
  client_2:
    container_name: client_2
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    entrypoint: /bin/sh -c 'while sleep 1000; do :; done'
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - FILE_READER_LINES=20
      - THUMBNAIL_PATH=.temp
      - OUTPUT_INSTANCES=2
    volumes:
      - ./data/client2:/workspace/data
      - ./.tmp/client_2:/workspace/.temp
  client_3:
    container_name: client_3
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    entrypoint: /bin/sh -c 'while sleep 1000; do :; done'
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - FILE_READER_LINES=20
      - THUMBNAIL_PATH=.temp
      - OUTPUT_INSTANCES=2
    volumes:
      - ./data/client3:/workspace/data
      - ./.tmp/client_3:/workspace/.temp
  client_4:
    container_name: client_4
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    entrypoint: /bin/sh -c 'while sleep 1000; do :; done'
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - FILE_READER_LINES=20
      - THUMBNAIL_PATH=.temp
      - OUTPUT_INSTANCES=2
    volumes:
      - ./data/client4:/workspace/data
      - ./.tmp/client_4:/workspace/.temp
  client_5:
    container_name: client_5
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    entrypoint: /bin/sh -c 'while sleep 1000; do :; done'
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - FILE_READER_LINES=20
      - THUMBNAIL_PATH=.temp
      - OUTPUT_INSTANCES=2
    volumes:
      - ./data/client5:/workspace/data
      - ./.tmp/client_5:/workspace/.temp
  acceptor:
    container_name: acceptor
    build:
      context: ./
      dockerfile: ./acceptor/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=acceptor
      - LOGGING_LEVEL=INFO
  trending_router:
    container_name: trending_router
    build:
      context: ./
      dockerfile: ./trending_router/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=trending_router
      - LOGGING_LEVEL=INFO
      - TRENDING_INSTANCES=2
  thumbnail_router:
    container_name: thumbnail_router
    build:
      context: ./
      dockerfile: ./thumbnail_router/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=thumbnail_router
      - LOGGING_LEVEL=INFO
      - N_PREV_WORKER_INSTANCES=2
      - INSTANCES=2
  downloader:
    container_name: downloader
    build:
      context: ./
      dockerfile: ./downloader/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=downloader
      - LOGGING_LEVEL=INFO
      - THUMBNAIL_INSTANCES=2
  tag_unique:
    container_name: tag_unique
    build:
      context: ./
      dockerfile: ./tag_unique/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=tag_unique
      - LOGGING_LEVEL=INFO
  trending_top:
    container_name: trending_top
    build:
      context: ./
      dockerfile: ./trending_top/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=trending_top
      - LOGGING_LEVEL=INFO
      - TRENDING_INSTANCES=2
  joiner_0:
    container_name: joiner_0
    build:
      context: ./
      dockerfile: ./joiner/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - N_PREV_WORKER_INSTANCES=2
      - SERVICE_ID=joiner_0
      - INSTANCE_NR=0
      - LOGGING_LEVEL=INFO
  joiner_1:
    container_name: joiner_1
    build:
      context: ./
      dockerfile: ./joiner/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - N_PREV_WORKER_INSTANCES=2
      - SERVICE_ID=joiner_1
      - INSTANCE_NR=1
      - LOGGING_LEVEL=INFO
  dropper_0:
    container_name: dropper_0
    build:
      context: ./
      dockerfile: ./dropper/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=dropper_0
      - LOGGING_LEVEL=INFO
      - OUTPUT_INSTANCES=2
      - INSTANCE_NR=0
  dropper_1:
    container_name: dropper_1
    build:
      context: ./
      dockerfile: ./dropper/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=dropper_1
      - LOGGING_LEVEL=INFO
      - OUTPUT_INSTANCES=2
      - INSTANCE_NR=1
  like_filter_0:
    container_name: like_filter_0
    build:
      context: ./
      dockerfile: ./likes_filter/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - LOGGING_LEVEL=INFO
      - SERVICE_ID=like_filter_0
      - N_PREV_WORKER_INSTANCES=2
      - FILTER_QTY=5000000
  trending_0:
    container_name: trending_0
    build:
      context: ./
      dockerfile: ./trending_instance/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=trending_0
      - LOGGING_LEVEL=INFO
      - INSTANCE_NR=0
  trending_1:
    container_name: trending_1
    build:
      context: ./
      dockerfile: ./trending_instance/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=trending_1
      - LOGGING_LEVEL=INFO
      - INSTANCE_NR=1
  thumbnail_0:
    container_name: thumbnail_0
    build:
      context: ./
      dockerfile: ./thumbnail_instance/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=thumbnail_0
      - LOGGING_LEVEL=INFO
      - INSTANCE_NR=0
  thumbnail_1:
    container_name: thumbnail_1
    build:
      context: ./
      dockerfile: ./thumbnail_instance/Dockerfile
    entrypoint: python3 main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_SERVER_ADDRESS=rabbitmq
      - SERVICE_ID=thumbnail_1
      - LOGGING_LEVEL=INFO
      - INSTANCE_NR=1
